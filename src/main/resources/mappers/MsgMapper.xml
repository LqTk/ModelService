<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.social.service.dao.MsgMapper">
  <resultMap id="BaseResultMap" type="com.social.service.domain.Msg">
    <constructor>
      <idArg column="msgId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="msgType" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="publishId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="peopleId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="reviewId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="chatReviewId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="readed" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="goodsId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="msgTime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    msgId, msgType, publishId, peopleId, reviewId, chatReviewId, readed, goodsId, msgTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from social_msg
    where msgId = #{msgId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from social_msg
    where msgId = #{msgId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.social.service.domain.Msg">
    insert into social_msg (msgId, msgType, publishId,
      peopleId, reviewId, chatReviewId, readed,
      goodsId, msgTime)
    values (#{msgId,jdbcType=VARCHAR}, #{msgType,jdbcType=VARCHAR}, #{publishId,jdbcType=VARCHAR},
      #{peopleId,jdbcType=VARCHAR}, #{reviewId,jdbcType=VARCHAR}, #{chatReviewId,jdbcType=VARCHAR},
      0, #{goodsId,jdbcType=VARCHAR}, #{msgTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.social.service.domain.Msg">
    insert into social_msg
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="msgId != null">
        msgId,
      </if>
      <if test="msgType != null">
        msgType,
      </if>
      <if test="publishId != null">
        publishId,
      </if>
      <if test="peopleId != null">
        peopleId,
      </if>
      <if test="reviewId != null">
        reviewId,
      </if>
      <if test="chatReviewId != null">
        chatReviewId,
      </if>
      <if test="readed != null">
        readed,
      </if>
      <if test="goodsId != null">
        goodsId,
      </if>
      <if test="msgTime != null">
        msgTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="msgId != null">
        #{msgId,jdbcType=VARCHAR},
      </if>
      <if test="msgType != null">
        #{msgType,jdbcType=VARCHAR},
      </if>
      <if test="publishId != null">
        #{publishId,jdbcType=VARCHAR},
      </if>
      <if test="peopleId != null">
        #{peopleId,jdbcType=VARCHAR},
      </if>
      <if test="reviewId != null">
        #{reviewId,jdbcType=VARCHAR},
      </if>
      <if test="chatReviewId != null">
        #{chatReviewId,jdbcType=VARCHAR},
      </if>
      <if test="readed != null">
        #{readed, INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=VARCHAR},
      </if>
      <if test="msgTime != null">
        #{msgTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.social.service.domain.Msg">
    update social_msg
    <set>
      <if test="msgType != null">
        msgType = #{msgType,jdbcType=VARCHAR},
      </if>
      <if test="publishId != null">
        publishId = #{publishId,jdbcType=VARCHAR},
      </if>
      <if test="peopleId != null">
        peopleId = #{peopleId,jdbcType=VARCHAR},
      </if>
      <if test="reviewId != null">
        reviewId = #{reviewId,jdbcType=VARCHAR},
      </if>
      <if test="chatReviewId != null">
        chatReviewId = #{chatReviewId,jdbcType=VARCHAR},
      </if>
      <if test="readed != null">
        readed = #{readed, INTEGER},
      </if>
      <if test="goodsId != null">
        goodsId = #{goodsId,jdbcType=VARCHAR},
      </if>
      <if test="msgTime != null">
        msgTime = #{msgTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where msgId = #{msgId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.social.service.domain.Msg">
    update social_msg
    set msgType = #{msgType,jdbcType=VARCHAR},
      publishId = #{publishId,jdbcType=VARCHAR},
      peopleId = #{peopleId,jdbcType=VARCHAR},
      reviewId = #{reviewId,jdbcType=VARCHAR},
      chatReviewId = #{chatReviewId,jdbcType=VARCHAR},
      readed = #{readed,jdbcType=INTEGER},
      goodsId = #{goodsId,jdbcType=VARCHAR},
      msgTime = #{msgTime,jdbcType=TIMESTAMP}
    where msgId = #{msgId,jdbcType=VARCHAR}
  </update>

  <resultMap id="goodsMap" type="com.social.service.domain.MsgPublishEntity">
    <constructor>
      <idArg column="msgId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="msgType" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="publishId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="publishTitle" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="publishText" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="peopleName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="peopleHead" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="peopleId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="isReaded" javaType="java.lang.Integer" jdbcType="INTEGER"/>
      <arg column="goodsId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="msgTime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <resultMap id="reviewMap" type="com.social.service.domain.MsgPublishEntity">
    <constructor>
      <idArg column="msgId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="msgType" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="publishId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="publishTitle" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="publishText" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="peopleName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="peopleHead" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="peopleId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="reviewId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="reviewText" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="isReaded" javaType="java.lang.Integer" jdbcType="INTEGER"/>
      <arg column="msgTime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <resultMap id="chatReviewMap" type="com.social.service.domain.MsgPublishEntity">
    <constructor>
      <idArg column="msgId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="msgType" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="publishId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="publishTitle" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="publishText" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="peopleName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="peopleHead" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="peopleId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="reviewId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="chatReviewId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="chatText" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="isReaded" javaType="java.lang.Integer" jdbcType="INTEGER"/>
      <arg column="msgTime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>

  <delete id="deleteByChatReviewId" parameterType="java.lang.String">
    delete from social_msg
    where chatReviewId = #{chatId,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteByGoodsId" parameterType="java.lang.String">
    delete from social_msg
    where goodsId = #{goodsId,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteByReviewId" parameterType="java.lang.String">
    delete from social_msg
    where reviewId = #{reviewId,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteByPublishId" parameterType="java.lang.String">
    delete from social_msg
    where publishId = #{publishId,jdbcType=VARCHAR}
  </delete>

  <select id="selectByPeopleId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from social_msg
    where peopleId = #{peopleId,jdbcType=VARCHAR} order by msgTime desc
  </select>

  <select id="selectGoods" parameterType="java.lang.String" resultMap="goodsMap">
    select a.msgId, a.msgType, a.publishId, b.shareName as publishTitle, b.shareText as publishText,
        c.name as peopleName, c.img as peopleHead, c.id as peopleId, a.readed as isReaded, a.goodsId, a.msgTime
        from social_msg as a
        join social_public as b
        join social_user as c
        join social_goods as d
        where a.msgId = #{msgId} and d.goodsId = a.goodsId and c.id = d.peopleId and b.shareId = a.publishId
  </select>

  <select id="selectReview" parameterType="java.lang.String" resultMap="reviewMap">
    select a.msgId, a.msgType, a.publishId, b.shareName as publishTitle, b.shareText as publishText,
        c.name as peopleName, c.img as peopleHead, c.id as peopleId, a.reviewId, d.reviewText, a.readed as isReaded, a.msgTime
        from social_msg as a
        join social_public as b
        join social_user as c
        join social_review as d
        where a.msgId = #{msgId} and b.shareId = a.publishId and d.reviewId = a.reviewId and c.id = d.peopleId
  </select>

  <select id="selectChatReview" parameterType="java.lang.String" resultMap="chatReviewMap">
    select a.msgId, a.msgType, a.publishId, b.shareName as publishTitle, b.shareText as publishText,
        c.name as peopleName, c.img as peopleHead, c.id as peopleId, a.reviewId, a.chatReviewId, d.chatText, a.readed as isReaded, a.msgTime
        from social_msg as a
        join social_public as b
        join social_user as c
        join social_chat_review as d
        where a.msgId = #{msgId} and b.shareId = a.publishId and d.reviewChatId = a.chatReviewId and c.id = d.talkId
  </select>

  <update id="updataReadState" parameterType="java.lang.String">
    update social_msg
    set readed = 1
    where msgId = #{msgId}
  </update>
</mapper>
