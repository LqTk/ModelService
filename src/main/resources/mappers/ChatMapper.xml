<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.social.service.dao.ChatMapper">
  <resultMap id="BaseResultMap" type="com.social.service.domain.Chat">
    <constructor>
      <idArg column="chatId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="talkId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="toId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="msgType" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="msgContent" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="voiceTime" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="filePath" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="chatTime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    chatId, talkId, toId, msgType, msgContent, voiceTime, filePath, chatTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from social_chat
    where chatId = #{chatid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from social_chat
    where chatId = #{chatid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.social.service.domain.Chat">
    insert into social_chat (chatId, talkId, toId,
      msgType, msgContent, voiceTime,
      filePath, chatTime)
    values (#{chatId,jdbcType=VARCHAR}, #{talkId,jdbcType=VARCHAR}, #{toId,jdbcType=VARCHAR},
      #{msgType,jdbcType=VARCHAR}, #{msgContent,jdbcType=VARCHAR}, #{voiceTime,jdbcType=VARCHAR},
      #{filepath,jdbcType=VARCHAR}, now())
  </insert>
  <insert id="insertSelective" parameterType="com.social.service.domain.Chat">
    insert into social_chat
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="chatId != null">
        chatId,
      </if>
      <if test="talkId != null">
        talkId,
      </if>
      <if test="toId != null">
        toId,
      </if>
      <if test="msgType != null">
        msgType,
      </if>
      <if test="msgContent != null">
        msgContent,
      </if>
      <if test="voiceTime != null">
        voiceTime,
      </if>
      <if test="filepath != null">
        filePath,
      </if>
      <if test="chatTime != null">
        chatTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="chatId != null">
        #{chatId,jdbcType=VARCHAR},
      </if>
      <if test="talkId != null">
        #{talkId,jdbcType=VARCHAR},
      </if>
      <if test="toId != null">
        #{toId,jdbcType=VARCHAR},
      </if>
      <if test="msgType != null">
        #{msgType,jdbcType=VARCHAR},
      </if>
      <if test="msgContent != null">
        #{msgContent,jdbcType=VARCHAR},
      </if>
      <if test="voiceTime != null">
        #{voiceTime,jdbcType=VARCHAR},
      </if>
      <if test="filepath != null">
        #{filepath,jdbcType=VARCHAR},
      </if>
      now(),
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.social.service.domain.Chat">
    update social_chat
    <set>
      <if test="talkId != null">
        talkId = #{talkId,jdbcType=VARCHAR},
      </if>
      <if test="toId != null">
        toId = #{toId,jdbcType=VARCHAR},
      </if>
      <if test="msgType != null">
        msgType = #{msgType,jdbcType=VARCHAR},
      </if>
      <if test="msgContent != null">
        msgContent = #{msgContent,jdbcType=VARCHAR},
      </if>
      <if test="voiceTime != null">
        voiceTime = #{voiceTime,jdbcType=VARCHAR},
      </if>
      <if test="filepath != null">
        filePath = #{filepath,jdbcType=VARCHAR},
      </if>
      <if test="chattime != null">
        chatTime = now(),
      </if>
    </set>
    where chatId = #{chatid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.social.service.domain.Chat">
    update social_chat
    set talkId = #{talkId,jdbcType=VARCHAR},
      toId = #{toId,jdbcType=VARCHAR},
      msgType = #{msgType,jdbcType=VARCHAR},
      msgContent = #{msgContent,jdbcType=VARCHAR},
      voiceTime = #{voiceTime,jdbcType=VARCHAR},
      filePath = #{filepath,jdbcType=VARCHAR},
      chatTime = now()
    where chatId = #{chatid,jdbcType=VARCHAR}
  </update>


  <resultMap id="selectMap" type="com.social.service.domain.ChatEntity">
    <constructor>
      <arg column="chatId" javaType="java.lang.String" jdbcType="VARCHAR"/>
      <arg column="msgContent" javaType="java.lang.String" jdbcType="VARCHAR"/>
      <arg column="msgType" javaType="java.lang.String" jdbcType="VARCHAR"/>
      <arg column="voiceTime" javaType="java.lang.String" jdbcType="VARCHAR"/>
      <arg column="senderId" javaType="java.lang.String" jdbcType="VARCHAR"/>
      <arg column="senderAvatar" javaType="java.lang.String" jdbcType="VARCHAR"/>
      <arg column="senderName" javaType="java.lang.String" jdbcType="VARCHAR"/>
      <arg column="chatTime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>

  <select id="selectAllChatFromToId" parameterType="string" resultMap="selectMap">
    select a.chatId,a.msgContent,a.msgType,a.voiceTime,b.id as senderId,b.img as senderAvatar,b.name as senderName,a.chatTime
    from social_chat as a join social_user as b
    where a.toId=#{toId} and b.id=a.talkId
  </select>

  <select id="selectAllChatFromTalkId" parameterType="string" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
     from social_chat where talkId=#{talkId}
  </select>

  <select id="selectCurrentChat" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
     from social_chat where talkId=#{talkId} and toId=#{userId} order by chatTime asc
  </select>

</mapper>
