<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.social.service.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.social.service.domain.User">
    <constructor>
      <idArg column="id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="registrationId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="img" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="sex" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="birthday" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="age" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="phone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="des" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="latitude" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="longitude" javaType="java.lang.Double" jdbcType="DOUBLE" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, registrationId, name, password, img, sex, birthday, age, phone, create_time,
    update_time, des, latitude, longitude
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from social_user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from social_user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.social.service.domain.User">
    insert into social_user (id, registrationId, name,
      password, img, sex,
      birthday, age, phone,
      create_time, update_time, des, latitude, longitude
      )
    values (#{id,jdbcType=VARCHAR}, #{registrationid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR}, #{img,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER},
      #{birthday,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR},
      now(), now(), #{des,jdbcType=VARCHAR}, #{latitude,jdbcType=DOUBLE}, #{longitude,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.social.service.domain.User">
    insert into social_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="registrationid != null">
        registrationId,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="img != null">
        img,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="des != null">
        des,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="longitude != null">
        longitude
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="registrationid != null">
        #{registrationid,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        now(),
      </if>
      <if test="des != null">
        #{des,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        #{latitude, jdbcType=DOUBLE},
      </if>
      <if test="longitude != null">
        #{longitude, jdbcType=DOUBLE}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.social.service.domain.User">
    update social_user
    <set>
      <if test="registrationid != null">
        registrationId = #{registrationid,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = now(),
      </if>
      <if test="des != null">
        des = #{des,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.social.service.domain.User">
    update social_user
    set registrationId = #{registrationid,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = now(),
      des = #{des,jdbcType=VARCHAR},
      latitude = #{latitude,jdbcType=DOUBLE},
      longitude = #{longitude,jdbcType=DOUBLE}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <resultMap id="selectMap" type="com.social.service.domain.User">
    <constructor>
      <idArg column="id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="img" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="sex" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="birthday" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="age" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="phone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="des" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="latitude" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="longitude" javaType="java.lang.Double" jdbcType="DOUBLE" />
    </constructor>
  </resultMap>
  <sql id="select_Column_List">
    id, name, img, sex, birthday, age, phone, des, latitude, longitude
  </sql>

  <select id="checkExistByPhoneOrName" parameterType="string" resultType="int">
    select count(1)
    from social_user
    where phone=#{name} or name = #{name}
  </select>

  <select id="selectLogin" parameterType="map" resultMap="selectMap">
    select
    <include refid="select_Column_List" />
    from social_user
    where (name = #{name} or phone = #{name})
    and password = #{password}
  </select>

  <update id="updatePasswordByUsername" parameterType="map">
    update social_user
    set password=#{password},update_time=now()
    where name = #{name} or phone = #{name}
  </update>

  <update id="updataResigtrationId" parameterType="map">
    update social_user
    set registrationId=#{registrationId}
    where id=#{userId}
  </update>

  <select id="selectByRegistrationId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from social_user
    where registrationId=#{registrationId}
  </select>

  <update id="clearRegistrationId" parameterType="java.lang.String">
    update social_user
    set registrationId=null
    where id = #{userId}
  </update>
</mapper>
